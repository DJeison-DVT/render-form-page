name: Build and Deploy to Cloud Run

on:
    push:
        branches: ["main"]

env:
    PROJECT_ID: dementeinternal
    GAR_NAME: render-forms
    GAR_LOCATION: us-central1
    SERVICE: render-form-page
    REGION: us-central1

jobs:
    deploy:
        # Add 'id-token' with the intended permissions for workload identity federation
        permissions:
            contents: "read"
            id-token: "write"

        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            # NOTE: Alternative option - authentication via credentials json
            - name: Google Auth
              id: auth
              uses: "google-github-actions/auth@v2"
              with:
                  credentials_json: "${{ secrets.GCP_CREDENTIALS }}" # Replace with the name of your GitHub Actions secret

            - name: Write GCP Bucket Credentials
              run: echo "${{ secrets.GCP_BUCKET_CREDENTIALS }}" | base64 --decode > gcp_bucket_credentials.json

            - name: Show App Structure
              run: ls -la

            # Authenticate Docker to Google Cloud Artifact Registry
            - name: Docker Auth
              id: docker-auth
              run: |-
                  gcloud auth configure-docker "${{ env.GAR_LOCATION }}-docker.pkg.dev"

            - name: Build and Push Container
              run: |-
                  docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }}" ./
                  docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }}"

            # END - Docker auth and build

            - name: Deploy to Cloud Run
              id: deploy
              uses: google-github-actions/deploy-cloudrun@v2
              with:
                  service: ${{ env.SERVICE }}
                  region: ${{ env.REGION }}
                  # NOTE: If using a pre-built image, update the image name here
                  image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }}
                  # Change to fixed NEXTAUTH_URL if required
                  env_vars: |

                      NODE_TWILIO_ACCOUNT_SID=${{ secrets.NODE_TWILIO_ACCOUNT_SID }}
                      NODE_TWILIO_AUTH_TOKEN=${{ secrets.NODE_TWILIO_AUTH_TOKEN }}
                      NODE_TWILIO_PHONE_NUMBER=${{ secrets.NODE_TWILIO_PHONE_NUMBER }}
                      NODE_TWILIO_MESSAGING_SERVICE_SID=${{ secrets.NODE_TWILIO_MESSAGING_SERVICE_SID }}
                      NEXT_PUBLIC_APPROVAL_CONTACT_EMAIL=${{ secrets.NEXT_PUBLIC_APPROVAL_CONTACT_EMAIL }}
                      NODE_ENV="production"

                      NEXTAUTH_URL=${{ steps.deploy.outputs.url }}
                      PROJECT_ID=${{ secrets.PROJECT_ID }}
                      KEYFILE_NAME=${{ secrets.KEYFILE_NAME }}
                      BUCKET_NAME=${{ secrets.BUCKET_NAME }}
                      BUCKET_URL=${{ secrets.BUCKET_URL }}

                      AUTH_SECRET=${{ secrets.AUTH_SECRET }}

                      DATABASE_URL=${{ secrets.DATABASE_URL }}

            # If required, use the Cloud Run url output in later steps

            - name: Show Output
              run: echo ${{ steps.deploy.outputs.url }}
